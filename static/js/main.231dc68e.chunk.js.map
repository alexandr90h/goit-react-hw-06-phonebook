{"version":3,"sources":["redux/action.js","InputMainForm/InputMainForm.jsx","ContactsList/ContactsItem.jsx","ContactsList/ContactsList.jsx","InputFind/InputFind.jsx","InputFind/FilterContactsList.jsx","App.js","redux/reduser.js","index.js","ContactsList/contactsItem.module.scss","ContactsList/conractsList.module.scss","InputFind/inputFind.module.scss","app.module.scss","InputMainForm/inputMainForm.module.scss"],"names":["contactsAction","addContacts","createAction","name","number","payload","id","uuidv4","delContacts","filterChange","InputMainForm","schema","yup","shape","required","useForm","resolver","yupResolver","register","handleSubmit","errors","useState","setName","setNumber","dispatch","useDispatch","hendleInputChanga","e","target","value","reset","onSubmit","className","styles","mainForm","type","autoComplete","onChange","ref","message","ContactsListItem","props","contactItem","contentItem","nameItem","phonItem","onClick","onBtnDelId","ContactsList","stateData","useSelector","state","items","contactList","map","obj","InputFind","inputContainer","formBox","currentTarget","document","querySelector","style","color","FilterContactsList","filterName","filter","filterArr","toLowerCase","includes","App","useEffect","localStorage","setItem","JSON","stringify","mainContainer","createReducer","parse","getItem","action","undefined","find","alert","_","reduser","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.231dc68e.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContacts = createAction('contacts/add', (name, number) => {\r\n    return {\r\n        payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    }}\r\n});\r\nconst delContacts = createAction('contacts/dalete');\r\nconst filterChange = createAction('contacts/changeFilter');\r\nconst contactsAction={ addContacts, delContacts, filterChange }\r\nexport default  contactsAction;","import styles from './inputMainForm.module.scss';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useDispatch } from \"react-redux\";\r\nimport contactsAction from \"../redux/action.js\";\r\n\r\nexport default function InputMainForm() {\r\n        const schema = yup.object().shape({\r\n        name: yup.string().required(),\r\n        number:yup.number().required(),\r\n    })\r\n\r\n    const { register, handleSubmit, errors} = useForm({resolver:yupResolver(schema)});\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const hendleInputChanga = e => {\r\n        switch (e.target.name) {\r\n            case 'name': setName(e.target.value)\r\n                break;\r\n            case 'number': setNumber(e.target.value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const hendleOnSubmite = e => {\r\n        // e.preventDefault();\r\n        dispatch(contactsAction.addContacts(name,number));\r\n        reset();\r\n    }\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n     return (\r\n            <div>\r\n            <form onSubmit={handleSubmit(hendleOnSubmite)} className={styles.mainForm}>\r\n                <label>Name \r\n            <input type=\"text\" name=\"name\" autoComplete=\"off\" value={name} onChange={hendleInputChanga} ref={register} />\r\n                 </label>\r\n                 {errors.name && <p>{errors.name.message}</p>}\r\n                <label>Number\r\n                     <input type=\"text\" name=\"number\" autoComplete=\"off\" value={number} onChange={hendleInputChanga} ref={register}/>\r\n                 </label>\r\n                 {errors.number && <p>{ errors.number.message}</p>}\r\n                <button type=\"submit\">Add contact</button>\r\n        </form>\r\n            </div>\r\n    );\r\n\r\n};\r\n","import styles from './contactsItem.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactsListItem(props) {\r\n    return (\r\n        <li key={props.id} className={styles.contactItem}>\r\n            <div className={styles.contentItem}>\r\n                <span className={styles.nameItem}>{props.name}: </span>\r\n                <span className={styles.phonItem}>{props.number}</span>\r\n            </div>\r\n            <button onClick={() => props.onBtnDelId(props.id)}>delete</button>\r\n        </li>\r\n    )\r\n}\r\nContactsListItem.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n    onBtnDelId:PropTypes.func,\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport ContactsListItem from './ContactsItem';\r\nimport styles from './conractsList.module.scss'\r\nimport contactsAction from \"../redux/action.js\";\r\n\r\n\r\nexport default function ContactsList() {\r\n    const stateData = useSelector(state => state.items);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <ol className={styles.contactList}>\r\n            {stateData.map(obj => {\r\n                return (<ContactsListItem key={obj.id}\r\n                    id={obj.id}\r\n                    name={obj.name}\r\n                    number={obj.number}\r\n                    onBtnDelId={()=>dispatch(contactsAction.delContacts(obj.id))}\r\n                />)\r\n            })}\r\n        </ol>\r\n    )\r\n}","import styles from './inputFind.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport contactsAction from \"../redux/action.js\";\r\n\r\n\r\nexport default function InputFind() {\r\n    const dispatch = useDispatch();\r\n    const resetInputFind = () => {\r\n        dispatch(contactsAction.filterChange(''));\r\n        document.querySelector(\"#btn-reset\").style.color = \"rgb(192, 192, 192)\";\r\n    }\r\n    const hendlInputFilter = e => {\r\n        dispatch(contactsAction.filterChange(e.currentTarget.value));\r\n        e.currentTarget.value ? document.querySelector(\"#btn-reset\").style.color = \"red\" : document.querySelector(\"#btn-reset\").style.color = \"rgb(192, 192, 192)\";\r\n    }\r\n    return (\r\n            <div className={styles.inputContainer}>\r\n            <label>Find contacts by name </label>\r\n            <form className={styles.formBox}>\r\n                <input type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    onChange={hendlInputFilter} />\r\n                <button type=\"reset\" onClick={resetInputFind} id=\"btn-reset\"><FiX /></button>\r\n            </form>\r\n            </div>\r\n        )\r\n};\r\nInputFind.propTypes = {\r\n    onChangeFind:PropTypes.func,\r\n}","import ContactsListItem from '../ContactsList/ContactsItem';\r\nimport styles from '../ContactsList/conractsList.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport contactsAction from \"../redux/action.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function FilterContactsList() {\r\n    const stateData = useSelector(state => state.items);\r\n    const filterName = useSelector(state => state.filter);\r\n    const dispatch = useDispatch();\r\n    const filterArr = stateData.filter(obj => {\r\n        return (obj.name.toLowerCase().includes(filterName.toLowerCase()))\r\n    });\r\n    return (\r\n        <ol className={styles.contactList}>\r\n            {filterArr.map(obj => {\r\n                return(<ContactsListItem key={obj.id}\r\n                    id={obj.id}\r\n                    name={obj.name}\r\n                    number={obj.number}\r\n                    onBtnDelId={()=>dispatch(contactsAction.delContacts(obj.id))}\r\n                />)\r\n            })}\r\n        </ol>\r\n    )\r\n}\r\n\r\nFilterContactsList.propTypes = {\r\n    stateData: PropTypes.array,\r\n    changeFilter: PropTypes.string,\r\n    onBtnDelId:PropTypes.func,\r\n}","import styles from './app.module.scss';\r\nimport InputMainForm from './InputMainForm/InputMainForm';\r\nimport ContactsList from './ContactsList/ContactsList.jsx';\r\nimport InputFind from './InputFind/InputFind';\r\nimport FilterContactsList from './InputFind/FilterContactsList.jsx';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function App() {\r\n  const stateData = useSelector(state => state.items);\r\n  const filterName = useSelector(state => state.filter);\r\n useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(stateData));\r\n  }, [stateData,filterName]);\r\n  \r\n    return (\r\n      <div className={styles.mainContainer}>\r\n        <h1>Phonebook</h1>\r\n        <div>\r\n          <InputMainForm />\r\n        </div>\r\n        <div>\r\n          <h2>Contacts</h2>\r\n                  <InputFind />\r\n          {filterName === ''\r\n            ?\r\n            <ContactsList/>\r\n            :\r\n            <FilterContactsList/>\r\n          }\r\n        </div>\r\n    </div>\r\n    )\r\n};","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsAction from \"./action\";\r\n\r\nconst items = createReducer(JSON.parse(localStorage.getItem('contacts'))??[], {\r\n    [contactsAction.addContacts]: (state, action) => {\r\n        if (state.find(obj => obj.name.toLowerCase() === action.payload.name.toLowerCase()) !== undefined) {\r\n            alert(`${action.payload.name} is alreadyin contacts.`);\r\n        }\r\n        return [...state, action.payload];\r\n    },\r\n    [contactsAction.delContacts]: (state, action) => state.filter(({ id }) => id !== action.payload)\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [contactsAction.filterChange]: (_,action)=>action.payload\r\n})\r\n\r\nconst reduser = combineReducers({\r\n    items, filter,\r\n});\r\n\r\nconst store = createStore(reduser, composeWithDevTools());\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/reduser';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n<App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contactsItem_contactItem__2lYPm\",\"nameItem\":\"contactsItem_nameItem__zU42Z\",\"phonItem\":\"contactsItem_phonItem__2ncAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"conractsList_contactList__HTqX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"inputFind_inputContainer__uQhrl\",\"formBox\":\"inputFind_formBox__r5nmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"app_mainContainer__9HqjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"inputMainForm_mainForm__reB78\"};"],"sourceRoot":""}